name: Comprehensive CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - "**.md"
      - ".github/ISSUE_TEMPLATE/**"
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - "**.md"
      - ".github/ISSUE_TEMPLATE/**"
  workflow_dispatch:

# Required so security scans can upload SARIF, etc.
permissions:
  contents: read
<<<<<<< HEAD
  pull-requests: read
  security-events: write
  packages: read
  id-token: write

=======
>>>>>>> 69d9b37 (ci(ci-stability): rewrite comprehensive-ci.yml — PR scans non-blocking; main-only container scan; Python 3.11; SARIF + concurrency (#34))
  security-events: write
  packages: read
  id-token: write

# Avoid duplicate runs fighting each other
concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint (ruff) + format check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install ruff
        run: python -m pip install -U pip && pip install "ruff>=0.5.0"

      - name: ruff format --check
        run: ruff format --check .

      - name: ruff check
        run: ruff check .

<<<<<<< HEAD
tests:
  name: Unit tests (if any)
  needs: lint
  runs-on: ubuntu-latest
  # Only run if we actually have tests in the repo
  if: ${{ hashFiles('tests/**') != '' }}
  steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    ...

=======
  tests:
    name: Unit tests (if any)
    needs: lint
    runs-on: ubuntu-latest
    # Only run if we actually have tests in the repo
    if: hashFiles('tests/**', '**/test_*.py', '**/*_test.py') != ''
>>>>>>> 69d9b37 (ci(ci-stability): rewrite comprehensive-ci.yml — PR scans non-blocking; main-only container scan; Python 3.11; SARIF + concurrency (#34))
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py311-${{ hashFiles('**/requirements*.txt', '**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-py311-

      - name: Install deps (best effort)
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt || true; fi
          if [ -f pyproject.toml ]; then pip install -e . || true; fi
          pip install pytest || true

      - name: Run pytest
        run: pytest -q

  security_scans_pr:
    name: Security Scans (pull_request)
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    continue-on-error: true   # non-blocking on PRs
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Gitleaks (non-blocking)
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trivy filesystem scan (non-blocking)
        uses: aquasecurity/trivy-action@0.33.0
        with:
          scan-type: fs
          format: sarif
          output: trivy-results.sarif
<<<<<<< HEAD

          scanners: vuln
        continue-on-error: true

      - name: Check SARIF exists
        id: sarif
        run: |
          if [ -f trivy-results.sarif ]; then echo "exists=true" >> "$GITHUB_OUTPUT"; fi

      - name: Upload SARIF (Trivy)
        if: ${{ steps.sarif.outputs.exists == 'true' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

=======
          severity: CRITICAL,HIGH
          ignore-unfixed: true

      - name: Upload SARIF (Trivy)
        if: success() || failure()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

>>>>>>> 69d9b37 (ci(ci-stability): rewrite comprehensive-ci.yml — PR scans non-blocking; main-only container scan; Python 3.11; SARIF + concurrency (#34))
  build_and_container_scan:
    name: Build & Container Scan (push to main)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Free disk space
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Prune Docker
        run: |
          docker system prune -af || true
          docker builder prune -af || true

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image (local only, do NOT push)
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          tags: local/recoveryos:latest

      - name: Trivy image scan (non-blocking)
        uses: aquasecurity/trivy-action@0.33.0
        with:
          scan-type: image
          image-ref: local/recoveryos:latest
          format: sarif
          output: trivy-results.sarif
<<<<<<< HEAD
          scanners: vuln
        continue-on-error: true

      - name: Check SARIF exists
        id: sarif-image
        run: |
          if [ -f trivy-results.sarif ]; then echo "exists=true" >> "$GITHUB_OUTPUT"; fi

      - name: Upload SARIF (Trivy)
        if: ${{ steps.sarif-image.outputs.exists == 'true' }}
=======
          severity: CRITICAL,HIGH
          ignore-unfixed: true

      - name: Upload SARIF (Trivy)
        if: success() || failure()
>>>>>>> 69d9b37 (ci(ci-stability): rewrite comprehensive-ci.yml — PR scans non-blocking; main-only container scan; Python 3.11; SARIF + concurrency (#34))
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif
