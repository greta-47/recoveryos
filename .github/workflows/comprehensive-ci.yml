name: Comprehensive CI/CD Pipeline

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

# Avoid duplicate runs fighting each other
concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Runs on PRs, but is informational (won't fail the PR)
  security_scans_pr:
    name: Security Scans (pull_request)
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    continue-on-error: true          # <- non-blocking
    steps:
      - uses: actions/checkout@v4

      - name: Gitleaks (non-blocking)
        uses: gitleaks/gitleaks-action@v2
        with:
          # redact findings; never fail the job
          args: detect --no-git -v --redact --exit-code 0

      - name: Trivy filesystem scan (non-blocking)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: fs
          format: table
          severity: CRITICAL,HIGH
          ignore-unfixed: true
          exit-code: '0'              # <- non-blocking

  # Only runs when pushing to main (not on PRs / feature branches)
  build_and_container_scan:
    name: Build & Container Scan (push)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image (local)
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: local/app:latest

      - name: Trivy image scan (non-blocking)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: local/app:latest
          format: table
          severity: CRITICAL,HIGH
          ignore-unfixed: true
          exit-code: '0'              # <- non-blocking
